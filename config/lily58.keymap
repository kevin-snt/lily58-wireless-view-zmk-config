/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        minus_question: minus_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp LS(M)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(COMMA)>, <&kp DOT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        coma_semicolon: coma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        deadkey_exclamation: deadkey_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sl 3>, <&kp SLASH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3           &kp N4  &kp N5                                 &kp N6      &kp N7    &kp N8    &kp N9                &kp N0  &kp DELETE
&kp TAB       &kp A   &kp C   &kp O            &kp P   &kp Z                                  &kp J       &kp SEMI  &kp D     &deadkey_exclamation  &kp Y   &kp BACKSPACE
&kp CAPSLOCK  &kp Q   &kp S   &kp E            &kp N   &kp F                                  &kp L       &kp R     &kp T     &kp I                 &kp U   &kp ENTER
&kp LSHFT     &kp W   &kp X   &minus_question  &kp V   &kp B      &kp ENTER    &kp BACKSPACE  &dot_colon  &kp H     &kp G     &coma_semicolon       &kp K   &kp RSHFT
                              &kp LALT         &mo 1   &kp SPACE  &kp LCTRL    &kp RCTRL      &kp SPACE   &mo 2     &kp RGUI
            >;
        };

        nav_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &kp C_PREV  &kp C_PLAY_PAUSE  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &trans
&trans  &bt BT_CLR      &kp HOME      &kp UP_ARROW  &kp END       &kp PAGE_UP                         &kp C_NEXT  &kp N7            &kp NUMBER_8   &kp N9           &kp KP_PLUS   &trans
&trans  &kp SCROLLLOCK  &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN                       &kp MINUS   &kp NUMBER_4      &kp NUMBER_5   &kp NUMBER_6     &kp NUMBER_0  &trans
&trans  &kp INSERT      &kp C_VOL_DN  &kp K_MUTE    &kp C_VOL_UP  &kp C_PLAY_PAUSE  &trans    &trans  &kp COMMA   &kp NUMBER_1      &kp NUMBER_2   &kp NUMBER_3     &kp PERIOD    &trans
                                      &trans        &trans        &trans            &trans    &trans  &trans      &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        dev_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&trans  &trans          &trans                &trans                 &trans           &trans                         &trans         &trans           &trans         &trans            &trans             &trans
&trans  &kp LESS_THAN   &kp LESS_THAN         &kp GREATER_THAN       &kp DOLLAR       &kp PERCENT                    &kp AT_SIGN    &kp AMPERSAND    &kp ASTERISK   &kp SINGLE_QUOTE  &kp GRAVE          &trans
&trans  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL                      &kp BACKSLASH  &kp PLUS         &kp MINUS      &kp SLASH         &kp DOUBLE_QUOTES  &trans
&trans  &kp TILDE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE   &kp HASH     &trans    &trans  &kp PIPE       &kp EXCLAMATION  &kp SEMICOLON  &kp COLON         &kp QUESTION       &trans
                                              &trans                 &trans           &trans       &trans    &trans  &trans         &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        dead_key {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans                &trans  &trans  &trans         &trans
&trans  &kp A   &kp N9  &kp E   &kp O   &trans                    &trans  &kp LS(SINGLE_QUOTE)  &kp N8  &trans  &kp U          &trans
&trans  &kp N0  &kp N2  &kp N7  &kp E   &kp N                     &kp N5  &kp MINUS             &kp I   &kp I   &kp SEMICOLON  &trans
&trans  &kp E   &kp B   &kp E   &trans  &trans  &trans    &trans  &trans  &trans                &trans  &trans  &trans         &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
